generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum OrderStatusEnum {
  NEW
  PROCESSED
  READY_TO_PICKUP
  COMPLETED
}



model Customer {
  id          String    @id @default(uuid())
  name        String
  email       String    @unique
  phoneNumber String
  address     String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  deletedAt   DateTime?
  orders      Order[]
}

model Menu {
  id          Int             @id @default(autoincrement())
  title       String
  description String?
  price       Float
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
  deletedAt   DateTime?
  inventory   MenuInventory[]
  orderItems  OrderItem[]
}

model MenuInventory {
  id          Int       @id @default(autoincrement())
  menuId      Int
  orderTypeId Int
  quantity    Int       @default(0)
  dateStart   DateTime  @default(now())
  dateEnd     DateTime?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  deletedAt   DateTime?
  menu        Menu      @relation(fields: [menuId], references: [id])
  orderType   OrderType @relation(fields: [orderTypeId], references: [id])

  @@unique([menuId, orderTypeId, dateStart, dateEnd])
}

model OrderType {
  id            Int             @id @default(autoincrement())
  name          String          @unique
  description   String?
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  deletedAt     DateTime?
  MenuInventory MenuInventory[]
  orders        Order[]
}

model Order {
  id          Int         @id @default(autoincrement())
  orderId String  @unique
  customerId  String
  orderTypeId Int
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  deletedAt   DateTime?
  customer    Customer    @relation(fields: [customerId], references: [id])
  orderType   OrderType   @relation(fields: [orderTypeId], references: [id])
  orderItems  OrderItem[]
  orderStatus OrderStatus[]
}

model OrderStatus {
  id        Int       @id @default(autoincrement())
  orderId   Int
  status    OrderStatusEnum 
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  order     Order     @relation(fields: [orderId], references: [id])

}


model OrderItem {
  id        Int       @id @default(autoincrement())
  orderId   Int
  menuId    Int
  quantity  Int       @default(1)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
  menu      Menu      @relation(fields: [menuId], references: [id])
  order     Order     @relation(fields: [orderId], references: [id])
}
